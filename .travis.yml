dist: bionic
language: python
python: [3.8]
git:
  depth: false

stages:
  - name: test
  - name: publish
    if: tag IS present # OR ( branch IN (master) AND type IN (push) )

stage: test
install:
  - |-
      setup_kubectl () {
          echo "setup kubectl ${K3S_VERSION%+*}"
          curl -LO https://storage.googleapis.com/kubernetes-release/release/${K3S_VERSION%+*}/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
      }
      setup_helm () {
          echo "setup helm ${HELM_VERSION}"
          curl -sf https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION=${HELM_VERSION} bash
      }
      setup_k3s () {
          echo "setup k3s ${K3S_VERSION}"
          # https://rancher.com/docs/k3s/latest/en/installation/install-options/how-to-flags/
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${K3S_VERSION} sh -s - \
              --write-kubeconfig-mode=644 \
              --disable traefik \
              --disable metrics-server
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
      }

# https://github.com/helm/helm/releases
# https://github.com/rancher/k3s/releases
env:
  - K3S_VERSION=v1.17.4+k3s1 HELM_VERSION=v3.2.0

jobs:
  include:
    - stage: test
      script:
        - setup_kubectl
        - setup_helm
        - setup_k3s
        - helm install pebble ./pebble --wait --timeout 60s --values ci/ci-values.yaml
        - helm test pebble
      after_success:
        - kubectl get all --all-namespaces
      after_failure:
        - kubectl get all --all-namespaces
        - kubectl logs pebble-test -c acme-mgmt
        - kubectl logs pebble-test -c dns-mgmt
        - kubectl logs pebble-test -c dns
    - stage: publish
      script:
        - pip install chartpress
        - setup_helm
        - ./ci/publish
