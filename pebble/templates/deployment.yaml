{{- define "pebble.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pebble.fullname" . }}
  labels:
    {{- include "pebble.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pebble.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pebble.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 1

      volumes:
        - name: pebble-config-and-tls-root
          configMap:
            name: {{ include "pebble.fullname" . }}
        - name: pebble-temp-tls-leaf
          emptyDir: {}

      initContainers:
        - name: pebble-tls-leaf-creation
          image: twalter/minica:latest
          volumeMounts:
            - name: pebble-config-and-tls-root
              mountPath: /input
            # The Docker image's WORKDIR is /output, and minica will create a
            # folder like the first domain name (localhost) and put cert.pem and
            # key.pem into it.
            - name: pebble-temp-tls-leaf
              mountPath: /output/localhost
          command:
            # Avoid "open localhost/key.pem: file exists" as happen if the
            # container restarts for some reason.
            - sh
            - -c
            - >
                [ -e localhost/key.pem ] || exec
                minica
                -ca-cert /input/root-cert.pem
                -ca-key /input/root-key.pem
                -domains {{ include "pebble.domains" . | quote }}
                -ip-addresses 127.0.0.1

      containers:
        # Pebble is the acme server, but also expose a REST API on the
        # management port providing access to the certificates signing the acme
        # requests etc.
        - name: pebble
          image: "{{ .Values.pebble.image.repository }}:{{ .Values.pebble.image.tag | default .Chart.AppVersion }}"
          # image: busybox
          volumeMounts:
            - name: pebble-config-and-tls-root
              subPath: pebble-config.json
              mountPath: /etc/pebble/pebble-config.json
            - name: pebble-temp-tls-leaf
              mountPath: /etc/pebble/temp-tls-leaf
          # command: [ "cat", "/etc/pebble/pebble-config.json" ]
          command: [
            "pebble",
            "-config", "/etc/pebble/pebble-config.json",
            {{- if .Values.challtestsrv.enabled }}
            "-dnsserver", ":8053",
            {{- end }}
          ]
          ports:
            - name: acme
              containerPort: 8443
            - name: acme-mgmt
              containerPort: 8080
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            {{- with .Values.pebble.env }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          readinessProbe:
            # The goal of this readiness probe are:
            # - to not clutter logs
            # - react quickly (<0.2s) on ready
            # - react decently (<2s) on not ready
            timeoutSeconds: 60
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 1
            exec:
              command:
                - sh
                - -c
                - |
                    if [ -e /ready-signal ]
                    then
                        n=0
                        while [ $n -lt 25 ]
                        do
                            if [ "$(netstat -tl | grep 8443)" = "" ]
                            then
                                rm /ready-signal
                                exit 1
                            fi
                            sleep 2s
                            n=$((n+1))
                        done
                        exit 0
                    else
                        n=0
                        while [ $n -lt 250 ]
                        do
                            if [ "$(netstat -tl | grep 8443)" != "" ]
                            then
                                touch /ready-signal
                                exit 0
                            fi
                            sleep 0.2s
                            n=$((n+1))
                        done
                        exit 1
                    fi

        {{- if .Values.challtestsrv.enabled }}
        # A DNS server that can we make Pebble rely on. It's entries can be
        # configured through a REST API on the management port, and it can on
        # startup be configured to let all DNS lookups go to a cetain IP. A
        # common use is to make it go to the IP in the Kubernetes provided
        # environment variables like $(MYSVC_SERVICE_HOST).
        - name: challtestsrv
          image: "{{ .Values.challtestsrv.image.repository }}:{{ .Values.challtestsrv.image.tag | default .Chart.AppVersion }}"
          # command ref: https://github.com/letsencrypt/pebble/tree/master/cmd/pebble-challtestsrv#usage
          command: [
            "pebble-challtestsrv",
            "-management", ":8081",
            "-dns01", ":8053",
            "-tlsalpn01", "",
            "-http01", "",
            "-https01", "",
            "-defaultIPv4", {{ .Values.challtestsrv.command.defaultIPv4 | quote }},
            "-defaultIPv6", {{ .Values.challtestsrv.command.defaultIPv6 | quote }},
          ]
          ports:
            - name: dns-udp
              protocol: UDP
              containerPort: 8053
            - name: dns-tcp
              protocol: TCP
              containerPort: 8053
            - name: dns-mgmt
              containerPort: 8081
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            {{- with .Values.challtestsrv.env }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: dns-tcp
            periodSeconds: 2
        
        {{- with .Values.challtestsrv.initPostRequests }}
        - name: challtestsrv-initializer
          image: busybox:1.31
          command: [ "sh", "-c" ]
          args:
            - {{ range . }}wget --post-data {{ .data | toJson | squote }} localhost:8081/{{ .path }} && {{ end }} touch /tmp/signal-ready && sleep infinity
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            {{- with .Values.challtestsrv.env }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          readinessProbe:
            exec:
              command: ["cat", "/tmp/signal-ready"]
            periodSeconds: 2
        {{- end }}
        {{- end }}
{{- end }}

{{- include "pebble.deployment" . | fromYaml | merge .Values.merge.deployment | toYaml }}
